---

---
<nav class="sticky top-0 flex justify-evenly overflow-visible h-[70px] p-4">

    <div class="flex flex-1 items-center">
        <h1 class="m-auto text-[20px]">PORTFOLIO</h1>
    </div>

    <div class="flex flex-auto justify-center gap-4 items-center max-md:hidden">
        <div class="bg-gray-600 p-2 rounded-full flex justify-center gap-2">
        <a href="#home" id="homeLink" class="menu text-white">Home</a>
        <a href="#skills" id="skillsLink" class="menu text-white">Skills</a>
        <a href="#about" id="aboutLink" class="menu text-white">About</a>
        <a href="#contact" id="contactLink" class="menu text-white">Contact</a>
        </div>
    </div>

    <div class="flex flex-col items-center translate-y-1/2 flex-1 gap-4 md:pointer-events-none md:opacity-0 m-4">
        <img id="drop" alt="_dropDown" class="drop -translate-y-1/2 translate-x-[50px] w-8" src="/images/arrow.png">
       <div id="links" class="hidden flex-col border-1 w-[110px] translate-x-[50px] text-center gap-2 -translate-y-1/6">
        <a href="#home" class="menu bg-gray-600 p-1 rounded-full text-white" id="homeLinkb">Home</a>
        <a href="#skills" class="menu bg-gray-600 p-1 rounded-full text-white" id="skillsLinkb">Skills</a>
        <a href="#about" class="menu bg-gray-600 p-1 rounded-full text-white" id="aboutLinkb">About</a>
        <a href="#contact" class="menu bg-gray-600 p-1 rounded-full text-white" id="contactLinkb">Contact</a>
       </div>
    </div>
</nav>

<script>
    import {animate, hover, press} from "motion"

    hover(".menu", (element) => {
        animate(element, { y: -1 }, { duration: 0.1 })

        return () => animate(element, { y: 0 })
    })

     press(".drop", (element) => {
        animate(element, { scale: 0.8 }, { type: "spring", stiffness: 150})

        return () =>
            animate(element, { scale: 1 }, { type: "spring", stiffness: 150 })
    })

    let toggle = false;
    const click = document.getElementById("drop");
    const menu = document.getElementById("links");

   if (click && menu != null){
     click.addEventListener('click', ()=> {
        toggle = !toggle

        if(toggle) {
            menu.classList.remove("hidden");
            menu.classList.add("flex");
        }

        else{
            menu.classList.remove("flex");
            menu.classList.add("hidden");
        }
 });
   } 

    let mq = window.innerWidth;
    window.addEventListener("resize", () => {
        mq = window.innerWidth;

  const observer = new IntersectionObserver((entry)=> {
            entry.forEach((e)=>{
            const text = document.getElementById(`${e.target.id}Link`);
            const textb = document.getElementById(`${e.target.id}Linkb`);

                if(e.isIntersecting && text != null && mq > 768){

                    text.classList.remove("text-white");
                    text.classList.add("text-sky-400")

                }
                else if(!e.isIntersecting && text != null && mq > 768){
                    text.classList.remove("text-sky-400");
                    text.classList.add("text-white")
                }
                else if(e.isIntersecting && textb != null && mq < 768){

                    textb.classList.remove("bg-gray-600");
                    textb.classList.add("bg-sky-400");

                }
                else if(!e.isIntersecting && textb != null && mq < 768){
                    textb.classList.remove("bg-sky-400");
                    textb.classList.add("bg-gray-600")
                }
            })
        })
        
        const home = document.getElementById("home");
        const skills = document.getElementById("skills");
        const about = document.getElementById("about");
        const contact = document.getElementById("contact");

        const sections = [home, skills, about, contact];
        sections.forEach((section)=>{
           if (section != null){
              observer.observe(section);
           }
        });
         });
</script>